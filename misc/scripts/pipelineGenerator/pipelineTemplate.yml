name: ci_cd_pipeline_$BRANCH_NAME$
on:
  push:
    branches: [ $BRANCH_NAME$ ]
env:
  FRONTEND_IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/epistogram-frontend-$BRANCH_NAME$ 
  FRONTEND_CLOUD_RUN_SVC_NAME: epistogram-frontend-$BRANCH_NAME$

  BACKEND_IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/epistogram-backend-$BRANCH_NAME$
  BACKEND_CLOUD_RUN_SVC_NAME: epistogram-backend-$BRANCH_NAME$
  
  CLOUD_SQL_CONNCETION_NAME: gifted-country-324010:europe-central2:epistogram

jobs:
    
  # BUILD FRONTEND      
  build_frontend:
    name: CI/CD job for the whole Epistogram applicaiton.
    runs-on: ubuntu-latest

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          ref: $BRANCH_NAME$ # references the target branch
          path: $BRANCH_NAME$_repository # sets a relative folder to checkout to
        
      - name: Login to GCP
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_email: ${{ secrets.GCP_EMAIL }}
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}

      - name: Configure GCP Docker
        run: gcloud auth configure-docker --quiet

      - name: Copy proper .env file
        run: |
          cp -fr ./config/$BRANCH_NAME$.env ./.env 
        working-directory: ./$BRANCH_NAME$_repository/epistogram_frontend

      - name: Append additional values to .env file 
        run: |
          echo "" >> ./.env
          echo "REACT_APP_CURRENT_VERSION=`(date '+%Y.%m.%d.%H:%M')`" >> ./.env
          echo "REACT_APP_UNDER_MAINTENANCE=$IS_UNDER_MAINTENANCE$" >> ./.env
        working-directory: ./$BRANCH_NAME$_repository/epistogram_frontend

      - name: Build frontend container
        run: |
          docker build -t $FRONTEND_IMAGE_NAME .
        working-directory: ./$BRANCH_NAME$_repository/epistogram_frontend

      - name: Push Docker image to GCP Container Registry
        run: docker push $FRONTEND_IMAGE_NAME

  # BUILD BACKEND
  build_backend: 
    name: CI/CD job for the whole Epistogram applicaiton.
    runs-on: ubuntu-latest

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          ref: $BRANCH_NAME$ # references the target branch
          path: $BRANCH_NAME$_repository # sets a relative folder to checkout to
        
      - name: Login to GCP
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_email: ${{ secrets.GCP_EMAIL }}
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}

      - name: Configure GCP Docker
        run: gcloud auth configure-docker --quiet

      - name: Copy proper .env file
        run: |
          cp -fr ./config/$BRANCH_NAME$.env ./config.env 
        working-directory: ./$BRANCH_NAME$_repository/epistogram_backend

      - name: Set .env additional variables
        run: |
          echo "" >> ./config.env
          echo "IS_UNDER_MAINTENANCE=$IS_UNDER_MAINTENANCE$" >> ./config.env
          cat ./config.env
        working-directory: ./$BRANCH_NAME$_repository/epistogram_backend

      - name: Build backend container
        run: |
          docker build -t $BACKEND_IMAGE_NAME .
        working-directory: ./$BRANCH_NAME$_repository/epistogram_backend

      - name: Push Docker image to GCP Container Registry
        run: docker push $BACKEND_IMAGE_NAME
  
  # DEPLOY FRONTEND
  deploy_frontend:
    name: Deploy backend
    runs-on: ubuntu-latest
    needs: [build_backend, build_frontend]
    
    steps:  
      - name: Login to GCP
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_email: ${{ secrets.GCP_EMAIL }}
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}

      - name: Configure GCP Docker
        run: gcloud auth configure-docker --quiet

      - name: Deploy Docker image to GCP CloudRun
        run: |
          gcloud run deploy $FRONTEND_CLOUD_RUN_SVC_NAME \
          --image $FRONTEND_IMAGE_NAME \
          --region europe-west1 \
          --platform managed \
          --max-instances 1 \
          --port 80 \
          --allow-unauthenticated 

  # DEPLOY BACKEND
  deploy_backend:
    name: Deploy backend
    runs-on: ubuntu-latest
    needs: [build_backend, build_frontend]

    steps:
      - name: Login to GCP
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_email: ${{ secrets.GCP_EMAIL }}
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}

      - name: Configure GCP Docker
        run: gcloud auth configure-docker --quiet
        
      - name: Deploy Docker image to GCP CloudRun
        run: |
          gcloud run deploy $BACKEND_CLOUD_RUN_SVC_NAME \
          --image $BACKEND_IMAGE_NAME \
          --add-cloudsql-instances $CLOUD_SQL_CONNCETION_NAME \
          --region europe-west1 \
          --platform managed \
          --max-instances 1 \
          --min-instances 1 \
          --port 5000 \
          --allow-unauthenticated \
          --memory 4Gi \
          --cpu 2 \
          --concurrency 200