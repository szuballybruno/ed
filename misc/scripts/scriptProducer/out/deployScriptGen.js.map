{"version":3,"file":"deployScriptGen.js","mappings":"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","sources":["webpack://ScriptProducer/./src/SoftSchemaScriptService.ts","webpack://ScriptProducer/./src/XDInjection/XDInjector.ts","webpack://ScriptProducer/./src/jsExtensions.ts","webpack://ScriptProducer/./src/polyfills.ts","webpack://ScriptProducer/external node-commonjs \"fs\"","webpack://ScriptProducer/webpack/bootstrap","webpack://ScriptProducer/./src/main.ts"],"sourcesContent":["\r\nimport { getAllFilePaths, Polyfills, readFileSync, regexMatchAll } from './polyfills';\r\nimport { DepHierarchyItem, XDependency } from './XDInjection/XDInjector';\r\n\r\ntype ViewFile = {\r\n    name: string,\r\n    content: string\r\n}\r\n\r\nexport class SoftSchemaScriptService {\r\n\r\n    private _sqlFolderNames: string[];\r\n\r\n    constructor(private _sqlFolderPath: string) {\r\n\r\n        this._sqlFolderNames = ['views', 'constraints', 'functions', 'indices', 'triggers'];\r\n    }\r\n\r\n    getSoftSchemaScript(): string {\r\n\r\n        const foldersAndFiles = this\r\n            ._readAllSQLFolders();\r\n\r\n        const scripts = foldersAndFiles\r\n            .map(x => ({\r\n                ...x,\r\n                script: x.sqlFolderName === 'views'\r\n                    ? this._getViewCreationScript(x.files)\r\n                    : x\r\n                        .files\r\n                        .map(file => `-- ${file.name} \\n${file.content}${file.content.endsWith(';') ? '' : ';'}`)\r\n                        .join('\\n')\r\n            }));\r\n\r\n        const wrappedScripts = scripts\r\n            .map(script => this._mainScectionWrapper(script.sqlFolderName, script.script));\r\n\r\n        const script = wrappedScripts\r\n            .join('\\n');\r\n\r\n        return script;\r\n    }\r\n\r\n    /**\r\n     * SQL section wrapper \r\n     */\r\n    private _mainScectionWrapper(schemaItemName: string, script: string) {\r\n\r\n        return `\r\n-- CREATE ${schemaItemName}\r\n${script}\r\n`;\r\n    }\r\n\r\n    /**\r\n     * Reads sql folder file paths \r\n     */\r\n    private _readSQLFolderFiles(folderName: string) {\r\n\r\n        const path = `${this._sqlFolderPath}/${folderName}`;\r\n        const files = Array.from(getAllFilePaths(path))\r\n            .map(x => `${path}/${x}`);\r\n\r\n        return files;\r\n    }\r\n\r\n    /**\r\n     * Read sql folders \r\n     */\r\n    private _readAllSQLFolders() {\r\n\r\n        return this\r\n            ._sqlFolderNames\r\n            .map(x => {\r\n\r\n                return {\r\n                    sqlFolderName: x,\r\n                    files: this._readSQLFolderFiles(x)\r\n                        .filter(x => x.endsWith('.sql'))\r\n                        .map(x => ({\r\n                            name: Polyfills.getFileName(x).replace('.sql', ''),\r\n                            path: x,\r\n                            content: readFileSync(x),\r\n                        }))\r\n                };\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Get view createion script \r\n     */\r\n    private _getViewCreationScript(viewFiles: ViewFile[]) {\r\n\r\n        const nameAndDeps = this\r\n            ._getDepsOfViews(viewFiles);\r\n\r\n        const ordered = XDependency\r\n            .orderDepHierarchy(nameAndDeps);\r\n\r\n        const viewFilesOrdered = ordered\r\n            .map(x => viewFiles\r\n                .single(y => y.name === x.getCompareKey()));\r\n\r\n        const createScript = viewFilesOrdered\r\n            .map(x => `\\n--${x.name}\\nCREATE VIEW ${x.name}\\nAS\\n${x.content};`)\r\n            .join('\\n');\r\n\r\n        return createScript;\r\n    }\r\n\r\n    /**\r\n     * Get deps of views \r\n     */\r\n    private _getDepsOfViews(namesAndContents: ViewFile[]) {\r\n\r\n        return namesAndContents\r\n            .map(x => new DepHierarchyItem({\r\n                key: x.name,\r\n                deps: this\r\n                    ._getDepsOfView(x.content)\r\n            }));\r\n    }\r\n\r\n    /**\r\n     * Get deps of view\r\n     */\r\n    private _getDepsOfView(viewSql: string) {\r\n\r\n        const matches = regexMatchAll(viewSql, new RegExp('public\\\\..*_view', 'g'));\r\n        const filtered = matches\r\n            .map(x => x.replace('public.', ''))\r\n            .groupBy(x => x)\r\n            .map(x => x.key);\r\n\r\n        return filtered;\r\n    }\r\n}","import { RemapToFunctions, RemapToConstructors, ParametrizedFunction, ParametrizedConstructor } from './XDInjectorTypes';\r\n\r\nexport type DepHierarchyFunction = ParametrizedFunction | ParametrizedConstructor;\r\nexport type DepHierarchyItemConstraint = string | DepHierarchyFunction;\r\nexport type DependencyContainer<T extends DepHierarchyItemConstraint = DepHierarchyItemConstraint> = DepHierarchyItem<T>[];\r\n\r\nexport class DepHierarchyItem<T extends DepHierarchyItemConstraint = DepHierarchyItemConstraint> {\r\n\r\n    public key: T;\r\n    public deps: T[];\r\n    public params?: any;\r\n    public instance: any;\r\n\r\n    constructor(opts: {\r\n        key: T,\r\n        deps?: T[],\r\n        params?: any,\r\n        instance?: any\r\n    }) {\r\n        this.key = opts.key;\r\n        this.deps = opts.deps ?? [];\r\n        this.params = opts.params;\r\n        this.instance = opts.instance;\r\n    }\r\n\r\n    getCompareKey() {\r\n\r\n        return this\r\n            ._getCompareKeyFromValue(this.key);\r\n    }\r\n\r\n    getDepsCompareKeys() {\r\n\r\n        return this\r\n            .deps\r\n            .map(x => this\r\n                ._getCompareKeyFromValue(x));\r\n    }\r\n\r\n    private _getCompareKeyFromValue(value: T) {\r\n\r\n        return typeof value === 'string'\r\n            ? value\r\n            : value.name;\r\n    }\r\n}\r\n\r\nclass XDependencyHierarchyBuilder<T extends DepHierarchyFunction> {\r\n\r\n    private _items: DependencyContainer<T> = [];\r\n\r\n    constructor() {\r\n    }\r\n\r\n    addFunction<T extends ParametrizedFunction>(fn: T, deps: RemapToFunctions<Parameters<T>>, params?: any) {\r\n\r\n        const item = new DepHierarchyItem<T>({\r\n            key: fn,\r\n            deps: deps as any,\r\n            params\r\n        });\r\n\r\n        this._items.push(item as any);\r\n\r\n        return this;\r\n    }\r\n\r\n    addClass<T extends ParametrizedConstructor>(classType: T, deps: RemapToConstructors<ConstructorParameters<T>>) {\r\n\r\n        const item = new DepHierarchyItem<T>({\r\n            key: classType as any,\r\n            deps: deps as any\r\n        });\r\n        this._items.push(item as any);\r\n\r\n        return this;\r\n    }\r\n\r\n    addClassInstance<TInstance>(classType: ParametrizedConstructor<TInstance>, instance: TInstance) {\r\n\r\n        const item = new DepHierarchyItem<T>({\r\n            key: classType as any,\r\n            instance\r\n        });\r\n        this._items.push(item as any);\r\n\r\n        return this;\r\n    }\r\n\r\n    getContainer() {\r\n\r\n        return this._items;\r\n    }\r\n}\r\n\r\nexport class XDependency {\r\n\r\n    static getFunctionBuilder() {\r\n\r\n        return new XDependencyHierarchyBuilder<ParametrizedFunction>();\r\n    }\r\n\r\n    static getClassBuilder() {\r\n\r\n        return new XDependencyHierarchyBuilder<ParametrizedConstructor>();\r\n    }\r\n\r\n    static instantiate(container: DependencyContainer<DepHierarchyFunction>) {\r\n\r\n        // order items \r\n        const orderedContainer = this\r\n            .orderDepHierarchy(container);\r\n\r\n        // instantiate \r\n        return this\r\n            .instatiateOnly(orderedContainer);\r\n    }\r\n\r\n    static instatiateOnly(orderedContainer: DepHierarchyItem<DepHierarchyFunction>[]) {\r\n\r\n        // instance container \r\n        const instances = {} as any;\r\n\r\n        // reg instance \r\n        const regInstance = (item: DepHierarchyItem<DepHierarchyFunction>, instance: any) => instances[item.getCompareKey()] = instance;\r\n\r\n        // execute function\r\n        const instantiateItem = (item: DepHierarchyItem<DepHierarchyFunction>, args: any[]) => {\r\n\r\n            if (item.instance)\r\n                return item.instance;\r\n\r\n            const fn = item.key;\r\n\r\n            const isClass = Object\r\n                .getOwnPropertyNames(fn)\r\n                .includes('prototype');\r\n\r\n            return isClass\r\n                ? new (fn as ParametrizedConstructor)(...args)\r\n                : (fn as ParametrizedFunction)(...args);\r\n        };\r\n\r\n        // get instance \r\n        const getInstance = (key: string) => instances[key] ?? null;\r\n\r\n        // has instance\r\n        const hasInstance = (key: string) => !!getInstance(key);\r\n\r\n        // instatniate item\r\n        const instatiateItem = (item: DepHierarchyItem<DepHierarchyFunction>): any => {\r\n\r\n            // get dep instances\r\n            const depInstances = item\r\n                .getDepsCompareKeys()\r\n                .map(dependencyKey => {\r\n\r\n                    // existing instance \r\n                    if (hasInstance(dependencyKey))\r\n                        return getInstance(dependencyKey);\r\n\r\n                    // new item\r\n                    return instatiateItem(orderedContainer\r\n                        .single(x => x\r\n                            .getCompareKey() === dependencyKey));\r\n                });\r\n\r\n            // get instance \r\n            const instance = instantiateItem(item, depInstances);\r\n\r\n            // reg instance \r\n            regInstance(item, instance);\r\n        };\r\n\r\n        // instantiate items\r\n        orderedContainer\r\n            .forEach(item => instatiateItem(item));\r\n\r\n        const itemInstancePairs = orderedContainer\r\n            .map((item): [DepHierarchyItem<DepHierarchyFunction>, any] => [item, getInstance(item.getCompareKey())]);\r\n\r\n        return {\r\n            getInstance,\r\n            instances,\r\n            itemInstancePairs\r\n        };\r\n    }\r\n\r\n    static orderDepHierarchy<T extends DepHierarchyItemConstraint>(container: DependencyContainer<T>): DependencyContainer<T> {\r\n\r\n        /**\r\n         * State\r\n         */\r\n        const ordered: DepHierarchyItem<T>[] = [];\r\n        let unordered: DepHierarchyItem<T>[] = [...container]\r\n            .orderBy(x => x.getDepsCompareKeys().length);\r\n\r\n        /**\r\n         * Check integrity\r\n         */\r\n        const allKeys = unordered\r\n            .map(w => w.getCompareKey());\r\n\r\n        const allDeps = unordered\r\n            .flatMap(x => x.getDepsCompareKeys())\r\n            .groupBy(x => x)\r\n            .map(x => x.key);\r\n\r\n        const missingDeps = allDeps\r\n            .filter(x => allKeys\r\n                .none(y => y === x));\r\n\r\n        if (missingDeps.length > 0)\r\n            throw new Error(`Missing deps: [${missingDeps.join(', ')}]`);\r\n\r\n        /**\r\n         * Move function \r\n         */\r\n        const move = (item: DepHierarchyItem<T>) => {\r\n\r\n            // add to ordered\r\n            ordered\r\n                .push(item);\r\n\r\n            // remove from unordered\r\n            unordered = unordered\r\n                .filter(x => x.getCompareKey() !== item.getCompareKey());\r\n        };\r\n\r\n        /**\r\n         * Begin ordering\r\n         */\r\n        while (unordered.length > 0) {\r\n\r\n            let itemToMove: DepHierarchyItem<T> | null = null;\r\n\r\n            for (let index = 0; index < unordered.length; index++) {\r\n\r\n                const depHierarchyItem = unordered[index];\r\n                const hasZeroDeps = depHierarchyItem.getDepsCompareKeys().length === 0;\r\n                const allDepsInOrdered = depHierarchyItem\r\n                    .getDepsCompareKeys()\r\n                    .all(x => ordered\r\n                        .any(orderedItem => orderedItem.getCompareKey() === x));\r\n\r\n                if (hasZeroDeps || allDepsInOrdered) {\r\n\r\n                    itemToMove = depHierarchyItem;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!itemToMove)\r\n                throw new Error('Dep hierarchy ordering iteration failed.');\r\n\r\n            move(itemToMove);\r\n        }\r\n\r\n        return ordered;\r\n    }\r\n}","console.log('Extending prototypes...');\r\n\r\nexport const initJsExtensions = () => 1;\r\n\r\ndeclare global {\r\n\r\n    interface Array<T> {\r\n\r\n        remove(func: (item: T) => boolean): Array<T>;\r\n        orderBy(func: (item: T) => number | string | Date): Array<T>;\r\n        groupBy<TKey>(func: (item: T) => TKey): Grouping<T, TKey>[];\r\n        isDistinctBy<TKey>(func: (item: T) => TKey): boolean;\r\n        any(funcOrItem?: T | ((item: T) => boolean)): boolean;\r\n        none(func?: (item: T) => boolean): boolean;\r\n        all(func: (item: T) => boolean): boolean;\r\n        findLastIndex(func: (item: T) => boolean): number | null;\r\n        single(func?: (item: T) => boolean): T;\r\n        singleIndex(func?: (item: T) => boolean): number;\r\n        firstOrNullIndex(func?: (item: T) => boolean): number;\r\n        byIndex(index: number): T;\r\n        byIndexOrNull(index: number): T | null;\r\n        first(func?: (item: T) => boolean): T;\r\n        last(func?: (item: T) => boolean): T;\r\n        lastOrNull(func?: (item: T) => boolean): T;\r\n        firstOrNull(func?: (item: T) => boolean): T | null;\r\n        count(func: (item: T) => boolean): number;\r\n        insert(index: number, newItem: T): Array<T>;\r\n        each(func: (item: T) => void): Array<T>;\r\n    }\r\n\r\n    interface Date {\r\n        addDays(days: number): Date;\r\n    }\r\n\r\n    interface String {\r\n        trimChar(char: string): string;\r\n    }\r\n}\r\n\r\nexport type Grouping<TItem, TKey> = {\r\n    key: TKey,\r\n    items: TItem[],\r\n    first: TItem\r\n}\r\n\r\nString.prototype.trimChar = function (char: string) {\r\n\r\n    return this.replace(new RegExp(`^${char}+|${char}+$`, 'g'), '');\r\n};\r\n\r\n// eslint-disable-next-line no-extend-native\r\nDate.prototype.addDays = function (days: number) {\r\n\r\n    const date = new Date(this.valueOf());\r\n    date.setDate(date.getDate() + days);\r\n    return date;\r\n};\r\n\r\nArray.prototype.insert = function <T>(index: number, newItem: T) {\r\n\r\n    return [\r\n        // part of the array before the specified index\r\n        ...this.slice(0, index),\r\n        // inserted item\r\n        newItem,\r\n        // part of the array after the specified index\r\n        ...this.slice(index)\r\n    ];\r\n};\r\n\r\n// eslint-disable-next-line no-extend-native\r\nArray.prototype.groupBy = function <T, TKey>(func: (item: T) => TKey) {\r\n\r\n    const groups = [] as Grouping<T, TKey>[];\r\n\r\n    this\r\n        .forEach(item => {\r\n\r\n            const key = func(item);\r\n            const currentGroup = groups\r\n                .filter(x => x.key === key)[0];\r\n            const existingKey = !!currentGroup;\r\n\r\n            if (existingKey) {\r\n\r\n                currentGroup.items.push(item);\r\n            }\r\n            else {\r\n\r\n                groups\r\n                    .push({\r\n                        key: key,\r\n                        items: [item],\r\n                        first: item\r\n                    });\r\n            }\r\n        });\r\n\r\n    return groups;\r\n};\r\n\r\n// eslint-disable-next-line no-extend-native\r\nArray.prototype.isDistinctBy = function <T, TKey>(func: (item: T) => TKey) {\r\n\r\n    return !this\r\n        .groupBy(func)\r\n        .some(x => x.items.length > 1);\r\n};\r\n\r\n// eslint-disable-next-line no-extend-native\r\nArray.prototype.firstOrNull = function <T>(func?: (item: T) => boolean) {\r\n\r\n    if (!func)\r\n        func = (x: T) => true;\r\n\r\n    const filtered = this.filter(func);\r\n    const first = filtered[0];\r\n\r\n    if (first === undefined)\r\n        return null;\r\n\r\n    if (first === null)\r\n        return null;\r\n\r\n    return first;\r\n};\r\n\r\n// eslint-disable-next-line no-extend-native\r\nArray.prototype.lastOrNull = function <T>(func?: (item: T) => boolean) {\r\n\r\n    if (!func)\r\n        func = (x: T) => true;\r\n\r\n    const filtered = this.filter(func);\r\n    const last = filtered[filtered.length - 1];\r\n\r\n    if (last === undefined)\r\n        return null;\r\n\r\n    if (last === null)\r\n        return null;\r\n\r\n    return last;\r\n};\r\n\r\n// eslint-disable-next-line no-extend-native\r\nArray.prototype.last = function <T>(fn?: (item: T) => T) {\r\n\r\n    const func = fn ? fn : () => true;\r\n\r\n    const filtered = this.filter(func);\r\n\r\n    if (filtered.length === 0)\r\n        throw new Error('Last operaion found no matching elements!');\r\n\r\n    return filtered[filtered.length - 1];\r\n};\r\n\r\n// eslint-disable-next-line no-extend-native\r\nArray.prototype.first = function <T>(func?: (item: T) => boolean) {\r\n\r\n    if (!func)\r\n        func = (x: T) => true;\r\n\r\n    const filtered = this.filter(func);\r\n\r\n    if (filtered.length === 0)\r\n        throw new Error('First operaion found no matching elements!');\r\n\r\n    return filtered[0];\r\n};\r\n\r\n// eslint-disable-next-line no-extend-native\r\nArray.prototype.single = function <T>(func?: (item: T) => T) {\r\n\r\n    const filtered = this.filter(func ?? (() => true));\r\n\r\n    if (filtered.length === 0)\r\n        throw new Error('Single operaion found no matching elements!');\r\n\r\n    if (filtered.length > 1)\r\n        throw new Error('Single operation found more than one matching element!');\r\n\r\n    return filtered[0];\r\n};\r\n\r\n// eslint-disable-next-line no-extend-native\r\nArray.prototype.singleIndex = function <T>(func: (item: T) => boolean) {\r\n\r\n    const indices: number[] = [];\r\n\r\n    for (let index = 0; index < this.length; index++) {\r\n\r\n        const element = this[index];\r\n\r\n        if (!func(element))\r\n            continue;\r\n\r\n        indices.push(index);\r\n    }\r\n\r\n    if (indices.length === 0)\r\n        throw new Error('Single operaion found no matching elements!');\r\n\r\n    if (indices.length > 1)\r\n        throw new Error('Single operation found more than one matching element!');\r\n\r\n    return indices[0];\r\n};\r\n\r\n// eslint-disable-next-line no-extend-native\r\nArray.prototype.firstOrNullIndex = function <T>(func: (item: T) => boolean) {\r\n\r\n    const indices: number[] = [];\r\n\r\n    for (let index = 0; index < this.length; index++) {\r\n\r\n        const element = this[index];\r\n\r\n        if (!func(element))\r\n            continue;\r\n\r\n        indices.push(index);\r\n    }\r\n\r\n    return indices[0] ?? null;\r\n};\r\n\r\n// eslint-disable-next-line no-extend-native\r\nArray.prototype.byIndexOrNull = function <T>(index: number) {\r\n\r\n    const item = this[index];\r\n    if (item === undefined)\r\n        return null;\r\n\r\n    return item;\r\n};\r\n\r\n// eslint-disable-next-line no-extend-native\r\nArray.prototype.byIndex = function <T>(index: number) {\r\n\r\n    if (index >= this.length || index < 0)\r\n        throw new Error(`Index (${index}) is out of array bounds (0 - ${this.length})!`);\r\n\r\n    const item = this[index];\r\n    if (item === undefined)\r\n        throw new Error('Item is undefined!');\r\n\r\n    return item;\r\n};\r\n\r\n// eslint-disable-next-line no-extend-native\r\nArray.prototype.findLastIndex = function <T>(func: (item: T) => boolean) {\r\n\r\n    const filtered = this.filter(func);\r\n\r\n    if (filtered.length === 0)\r\n        return null;\r\n\r\n    return filtered.length - 1;\r\n};\r\n\r\n// eslint-disable-next-line no-extend-native\r\nArray.prototype.all = function <T>(func: (item: T) => boolean) {\r\n\r\n    return !this.some(x => !func(x));\r\n};\r\n\r\n// eslint-disable-next-line no-extend-native\r\nArray.prototype.any = function <T>(funcOrItem?: T | ((item: T) => boolean)) {\r\n\r\n    if (!funcOrItem)\r\n        return this.some(x => true);\r\n\r\n    if (typeof funcOrItem === 'function')\r\n        return this.some(funcOrItem as any);\r\n\r\n    return this.some(x => x === funcOrItem);\r\n};\r\n\r\n// eslint-disable-next-line no-extend-native\r\nArray.prototype.none = function <T>(func?: (item: T) => boolean) {\r\n\r\n    if (!func)\r\n        return this.length === 0;\r\n\r\n    return !this.some(func);\r\n};\r\n\r\n// eslint-disable-next-line no-extend-native\r\nArray.prototype.remove = function <T>(func: (item: T) => boolean) {\r\n\r\n    return this.filter(item => !func(item)) as Array<T>;\r\n};\r\n\r\n// eslint-disable-next-line no-extend-native\r\nArray.prototype.orderBy = function <T>(func: (item: T) => number | string | Date) {\r\n\r\n    const sorted = [...this]\r\n        .sort((a, b) => {\r\n\r\n            if (func(a) < func(b))\r\n                return -1;\r\n\r\n            if (func(a) > func(b))\r\n                return 1;\r\n\r\n            return 0;\r\n        });\r\n\r\n    return sorted;\r\n};\r\n\r\n// eslint-disable-next-line no-extend-native\r\nArray.prototype.count = function <T>(func: (item: T) => boolean): number {\r\n\r\n    let count = 0;\r\n\r\n    for (let index = 0; index < this.length; index++) {\r\n\r\n        const element = this[index];\r\n        const result = func(element);\r\n        if (result)\r\n            count++;\r\n    }\r\n\r\n    return count;\r\n};\r\n\r\n// eslint-disable-next-line no-extend-native\r\nArray.prototype.each = function <T>(func: (item: T) => void): T[] {\r\n\r\n    for (let index = 0; index < this.length; index++) {\r\n\r\n        const element = this[index];\r\n        func(element);\r\n    }\r\n\r\n    return this;\r\n};","import * as fs from 'fs';\r\n\r\nexport const writeFileSync = (filePath: string, data: string) => {\r\n\r\n    fs.writeFileSync(filePath, data);\r\n}\r\n\r\nexport const logScoped = (scope: string, text: string) => console.log(`[${scope}] ${text}`);\r\n\r\nexport const getAllFilePaths = (directoryPath: string) => {\r\n\r\n    return fs.readdirSync(directoryPath);\r\n}\r\n\r\nexport const regexMatchAll = (text: string, regex: RegExp): string[] => {\r\n\r\n    const matches = text.match(regex) ?? [] as string[];\r\n\r\n    return matches.map(x => '' + x);\r\n};\r\n\r\nexport const readFileSync = (path: string) => {\r\n\r\n    try {\r\n\r\n        return fs.readFileSync(path, 'utf-8');\r\n    }\r\n    catch (e: any) {\r\n        throw new Error(`Error reading path: ${path} Msg: ${e.message}`);\r\n    }\r\n};\r\n\r\nexport const existsSync = (path: string) => fs.existsSync(path);\r\n\r\nexport const readFileAsText = (path: string) => fs.readFileSync(path, 'utf-8');\r\n\r\nconst parseIntOrFail = (text: string, name?: string) => {\r\n\r\n    const parsed = parseInt(text);\r\n\r\n    if (Number.isNaN(parsed))\r\n        throw new Error(`Parsing int param \"${name ?? '-'}\" failed.`);\r\n\r\n    return parsed;\r\n};\r\n\r\nconst getFileName = (path: string): string => {\r\n\r\n    var splitTest = function (str) {\r\n        return str.split('\\\\').pop().split('/').pop();\r\n    }\r\n\r\n    return splitTest(path);\r\n};\r\n\r\nexport const Polyfills = {\r\n    readFileAsText,\r\n    getAllFilePaths,\r\n    parseIntOrFail,\r\n    getFileName\r\n};","module.exports = require(\"fs\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import './jsExtensions';\r\nimport { Polyfills, writeFileSync } from \"./polyfills\";\r\nimport { SoftSchemaScriptService } from \"./SoftSchemaScriptService\";\r\n\r\nconst rootFolderPath = __dirname + '/../../../../';\r\nconst deployFolderFilePath = `${rootFolderPath}deploy`;\r\nconst sqlFolderFilePath = `${rootFolderPath}packages/backend/sql`;\r\nconst migrationsFolderFilePath = sqlFolderFilePath + '/migrations';\r\n\r\nconst getMigrationScript = ({\r\n    createMigrationsTableScript,\r\n    migrationVersions,\r\n    dropSoftSchemaScript,\r\n    softSchemaCreateScript\r\n}: {\r\n    migrationVersions: string[],\r\n    createMigrationsTableScript: string,\r\n    dropSoftSchemaScript: string,\r\n    softSchemaCreateScript: string\r\n}) => {\r\n\r\n    /**\r\n     * Insert migration verisons \r\n     */\r\n    const insertMigrationVersionsScript = migrationVersions\r\n        .map(ver => {\r\n\r\n            return `\r\n-- MIGRATION: ${ver}\r\nINSERT INTO public.migration_version\r\nVALUES ('${ver}', now()); `;\r\n        })\r\n        .join('\\n');\r\n\r\n    /**\r\n     * Migration scripts \r\n     */\r\n    const migartionScripts = migrationVersions\r\n        .map(ver => {\r\n\r\n            const migrationScript = `--MIGRATION: ${ver}\\n${Polyfills\r\n                .readFileAsText(`${migrationsFolderFilePath}/${ver}.sql`)}`;\r\n\r\n            return migrationScript;\r\n        })\r\n        .join('\\n\\n');\r\n\r\n    /**\r\n     * Assemble final script \r\n     */\r\n    return `\r\n-- MIGRATION VERSIONS: ${migrationVersions.join(', ')}\r\n\r\n-- BEGIN TRANSACTION\r\nBEGIN;\r\n\r\n-- CREATE MIGARTION VERSION TABLE\r\n${createMigrationsTableScript}\r\n\r\n-- STORE MIGRATION VERSION\r\n${insertMigrationVersionsScript}\r\n\r\n-- DROP SOFT SCHEMA\r\n${dropSoftSchemaScript}\r\n\r\n-- EXECUTE MIGRATIONS \r\n${migartionScripts}\r\n\r\n-- CREATE SOFT SCHEMA\r\n${softSchemaCreateScript}\r\n\r\n-- COMMIT TRANSACTION\r\nCOMMIT;\r\n`;\r\n};\r\n\r\nconst getMigrationVerisonsArgs = () => {\r\n\r\n    const versions = Polyfills\r\n        .readFileAsText(deployFolderFilePath + '/out/migrationVersionsOnServer.txt');\r\n\r\n    const veList = versions\r\n        .split('\\n')\r\n        .map(x => x\r\n            .replace(' ', '')\r\n            .replace('\\r', ''))\r\n        .filter(x => !!x);\r\n\r\n    if (!veList.any())\r\n        throw new Error('Server has no version migration history. Create it manually.');\r\n\r\n    return veList;\r\n}\r\n\r\nconst getVersionNumber = (migver: string) => {\r\n\r\n    return Polyfills.parseIntOrFail(migver.replace('migration', ''));\r\n}\r\n\r\nconst getServerVersionNumber = () => {\r\n\r\n    const serverMigrationVersions = getMigrationVerisonsArgs();\r\n\r\n    const ordered = serverMigrationVersions\r\n        .orderBy(x => getVersionNumber(x));\r\n\r\n    const latestVersionOnServer = ordered\r\n        .last();\r\n\r\n    return getVersionNumber(latestVersionOnServer);\r\n}\r\n\r\nconst getMissingMigrations = (migrationsFolderFilePath: string) => {\r\n\r\n    const latestVersionOnServer = getServerVersionNumber();\r\n\r\n    console.log(`Latest version on server: ${latestVersionOnServer}`);\r\n\r\n    const allMigrationVersions = Polyfills\r\n        .getAllFilePaths(migrationsFolderFilePath)\r\n        .map(x => Polyfills\r\n            .getFileName(x)\r\n            .replace('.sql', ''));\r\n\r\n    const missingVersions = allMigrationVersions\r\n        .filter(x => getVersionNumber(x) > latestVersionOnServer);\r\n\r\n    return missingVersions\r\n        .orderBy(x => getVersionNumber(x));\r\n};\r\n\r\nconst createScripts = () => {\r\n\r\n    const missingMigraitonVersions = getMissingMigrations(migrationsFolderFilePath);\r\n\r\n    console.log(`Missing versions: ${missingMigraitonVersions.join(', ')}`);\r\n\r\n    const softSchemaCreateScript = new SoftSchemaScriptService(sqlFolderFilePath)\r\n        .getSoftSchemaScript();\r\n\r\n    const createMigrationsTableScript = Polyfills\r\n        .readFileAsText(`${deployFolderFilePath}/sql/createMigrationVersionTable.sql`);\r\n\r\n    const dropSoftSchemaScript = Polyfills\r\n        .readFileAsText(`${deployFolderFilePath}/sql/dropSoftSchema.sql`);\r\n\r\n    const fullMigrationScript = getMigrationScript({\r\n        createMigrationsTableScript,\r\n        softSchemaCreateScript,\r\n        dropSoftSchemaScript,\r\n        migrationVersions: missingMigraitonVersions\r\n    });\r\n\r\n    writeFileSync(deployFolderFilePath + '/out/fullMigrationScript.sql', fullMigrationScript);\r\n    writeFileSync(deployFolderFilePath + '/out/softSchemaCreateScript.sql', softSchemaCreateScript);\r\n};\r\n\r\nprocess\r\n    .on('uncaughtException', (err) => {\r\n\r\n        console.error('---- FATAL ERROR -----');\r\n        console.error(err);\r\n    });\r\n\r\n// console.log(Polyfills.getAllFilePaths(backendPath));\r\ncreateScripts();"],"names":[],"sourceRoot":""}