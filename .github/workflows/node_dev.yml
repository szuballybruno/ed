name: node_dev CI

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:

  checkout_build_deploy_and_start:
    name: CI/CD job for the whole Epistogram applicaiton.
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    env:
      REACT_APP_IS_DEPLOYED: true 
      PIPELINE_ENVIRONMENT: dev
      PIPELINE_ENVIRONMENT_LONG: development
    
    steps:

      - name: Echo pipeline environment
        run: echo ${{ env.PIPELINE_ENVIRONMENT }}

      # INITIALIZE
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          ref: ${{ env.PIPELINE_ENVIRONMENT }} # references the target branch
          path: ${{ env.PIPELINE_ENVIRONMENT }}_build # sets a relative folder to checkout to

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
    
      # BUILD BACKEND
      - name: Installing dependencies for backend
        run: |
          echo In: $PWD
          yarn
        working-directory: ./${{ env.PIPELINE_ENVIRONMENT }}_build/epistogram_backend
        
      - name: Building backend
        run: |
          echo In: $PWD
          tsc
        working-directory: ./${{ env.PIPELINE_ENVIRONMENT }}_build/epistogram_backend
        
      # BUILD FRONTEND
      - name: Installing dependencies for frontend
        run: |
          echo In: $PWD
          yarn
        working-directory: ./${{ env.PIPELINE_ENVIRONMENT }}_build/epistogram_frontend
        
      - name: Building frontend
        run: |
          echo In: $PWD
          CI=false npm run build
        working-directory: ./${{ env.PIPELINE_ENVIRONMENT }}_build/epistogram_frontend

      # DEPLOY BACKEND
      - name: Clearing target folder
        run: |
          echo In: $PWD
          rm -r epistogram_backend@${{ env.PIPELINE_ENVIRONMENT_LONG }}
          mkdir epistogram_backend@${{ env.PIPELINE_ENVIRONMENT_LONG }}
        working-directory: /var/lib/apps/

      - name: Copying package.json to ./build folder
        run: |
          echo In: $PWD
          cp ./package.json ./build
        working-directory: ./${{ env.PIPELINE_ENVIRONMENT }}_build/epistogram_backend

      - name: Copying config file to ./build folder
        run: |
          echo In: $PWD
          cp ./config/${{ env.PIPELINE_ENVIRONMENT }}.env ./build/config.env
        working-directory: ./${{ env.PIPELINE_ENVIRONMENT }}_build/epistogram_backend

      - name: Copying 'sql' folder to ./build folder
        run: |
          echo In: $PWD
          cp -r ./sql ./build/sql
        working-directory: ./${{ env.PIPELINE_ENVIRONMENT }}_build/epistogram_backend

      - name: Deploying backend to hosted location
        run: |
          echo In: $PWD
          cp -r ./build/. /var/lib/apps/epistogram_backend@${{ env.PIPELINE_ENVIRONMENT_LONG }}
        working-directory: ./${{ env.PIPELINE_ENVIRONMENT }}_build/epistogram_backend

      - name: Downloading node_modules to hosting location
        run: |
          echo In: $PWD
          yarn
        working-directory: /var/lib/apps/epistogram_backend@${{ env.PIPELINE_ENVIRONMENT_LONG }}

      # DEPLOY FRONTEND
      - name: Deploying frontend to hosted location
        run: |
          echo In: $PWD
          cp -r ./build/. /var/lib/apps/epistogram@${{ env.PIPELINE_ENVIRONMENT_LONG }}
        working-directory: ./${{ env.PIPELINE_ENVIRONMENT }}_build/epistogram_frontend

      # RUN BACKEND APPLICATION  
      - name: Deleting previous PM2 process
        run: |
          echo In: $PWD
          pm2 delete epistogram_backend_${{ env.PIPELINE_ENVIRONMENT }}
        continue-on-error: true
        working-directory: /var/lib/apps/epistogram_backend@${{ env.PIPELINE_ENVIRONMENT_LONG }}
      
      - name: Start new PM2 process
        run: |
          echo In: $PWD
          pm2 start /var/lib/apps/epistogram_backend@${{ env.PIPELINE_ENVIRONMENT_LONG }}/server.js --name=epistogram_backend_${{ env.PIPELINE_ENVIRONMENT }}
        working-directory: /var/lib/apps/epistogram_backend@${{ env.PIPELINE_ENVIRONMENT_LONG }}