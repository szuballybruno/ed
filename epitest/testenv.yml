version: '3.3'

services:

  database:
    image: mypg
    build: 
      context: ./
      dockerfile: ./mypg.Dockerfile 
    environment:
      POSTGRES_PASSWORD: "${EPITEST_POSTGRES_USER_PASSWORD}" #'epitest_postgres_user_pass' # for local run
      POSTGRES_USER: 'dev_service_user'
      POSTGRES_DB: 'epistogram_local'
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev_service_user -d epistogram_local"]
      interval: 20s
      timeout: 5s
      retries: 5
    networks:
      - test_net

  server: 
    image: localhost:6000/server:latest
    depends_on: 
      database: 
        condition: service_healthy
    environment:
      ENV_NAME: 'epitest'
    expose: 
      - 5000
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:6000/misc/healthcheck || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 5
    networks:
      test_net: 
        aliases: 
          - epitest.api.dtraining.hu

  client: 
    image: localhost:6000/client:latest
    depends_on: 
      database: 
        condition: service_healthy
    restart: always
    expose: 
      - 80
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://epitest.dtraining.hu || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 5
    networks:
      test_net: 
        aliases: 
          - epitest.dtraining.hu
      
  tests-client: 
    image: localhost:6000/tests-client:latest
    depends_on: 
      client:
        condition: service_healthy
    environment:
      IS_DOCKERIZED: 'true'
    volumes: 
      - ./out:/app/packages/tests-client/cypress/videos
    networks:
      - test_net

networks:
  test_net:
    driver: bridge